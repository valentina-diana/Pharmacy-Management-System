<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAC
        wwAAAsMBCdU7dAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABJmSURBVHhe7Z0J
        VBTHusdhWESRCAiCbIosriCCGhBXVkEFRdQYd4MmRkWNC74YjShu0TwTTYwbikuicYmiXo3mumDUJBpX
        VPRq3BKNxrwkvnPecu+5932vvg7dU9VTs7DODFPfOb9zerq++rq6v/90V3dXd9sJEyZMmDBhwoQJEyZM
        WJ02Z0IHwiDCZEJeOTiN86II6COsDllTwhTCScJ/E8AI6HOCkEvwJQizUoskfEr4B4GXaFPAutsJ7QjC
        rMQ8CesJ/yTwkloZMNY6AsYWZsGWTHhM4CURAuu7QrZ/c3i7VSR83CEOtnfuLoHTOG8gKfN3qc+tW85P
        hESCMAs0PGbr/OtdHR1hbPMw+LJrCjxIG2QSu9p0hMHu3lBfo2FilYPLwE6jMAuy+QQmUY729lLiryRl
        cpNsiPupA+G7Vh3hSHA7GNTIGzR29kzscuYShFmAzSAwyQlq4AoHuiRxk2sqN+NT4FxolMSGgHBo6uTM
        LKOcqQRhZrR0wr8ISlI6eXjBtaT+3KQi9wmneqTBQSIQmhIyD8u0vtlkL9BJEcGXwREQ4eJKJx/Bw0Eq
        QZgZzIfwC0FJSGdPb7iVkkUlkWVPbC8IIB1Bug4NdhLRR/YvfTlREQByIiQS2uuK4CnBmyCslm0nQUlE
        C1c3KE3W/8/HvUJj53p04rh41XNR4twldWgBIEdbRECgk06cbQRhtWixhP8jSAlwJr11Y738wpiu6qTp
        ZVPHrkq98621hwGZosCW4EQ6mVQdbEtngrBassMEJQG5oW2YZPN4L6IjnTBITkmF3KlTJXCaLkNfud7l
        6O46AkBGePgwdQjFBGG1YC0Jyr/fk+zWb6YMYJLNQy2Ajz9ZC7/+/kICp+kyWgDXY5O4AjjeIhIaOTjS
        9bAzGkoQVsOWT1A2/LSwtkyi9VFZAZR1TeMKAHnN05epR5hHEFbDVkqQNriGHIe/6dWHSTRyJ3WgdB1A
        vtSLjAsOZ5JlSADoK9fbFNkZNgWGQ0lIex0B7G3WBuypeoSrBGE1aF4EZfcf5e6pk/zd5DTO1/D1fInN
        W7YpAsBpng+Nt6MTrA0I0xFBq3oNaD88DIgbRjVoaQRlg09o0YpJfllKFjQhp3G0Dw8nJye4dqNMEcCV
        0hvSPJ4vjRcRwcmQSEYAwzyaqP3EhaEaNLwJo2zsVVEvMwLAfz9dzsPBwQEWL12mJF+mYPESqYxXh0a9
        F3jXp5naZxLBqgwHTuwhfGUF3CMoG3tfXAIjgA0x8XQipNO7ee/mKyxbvgK+PveNTvJlTp89B0vfW87U
        UZ8iLmsazAhgPREEXU7ANvLabmnsJkQQ7MoI6pWwCv7aLdWgABYULOImuiJgDDqmWgCfBrViyq2MmwRu
        gVVwontvswtgZ1BrptwK4c60CvAuniEBjB4zFvbuK1Y4frIEnjx7zk00gmXoQ9fBGHRMtQAKySkiXW6F
        aH8EdWgNs09vN0jMwBS6MrxWtITrJzP+0xWMf1RGAtePJrhzJFNn5vHN0vxeE4Yy89dFd2EEgOftdDmP
        Jk18YF/xQZ3kf7H/AHg30enR6/ChXwgjgMW+zZnyXm8Oldo683gRMz+4UwSzjjxw29B1xm9fzvWTwW1P
        +2Nuoj7fCOGfrddLgzYtmToE7Q9LF8CAginM/Bnh7RgBXE7KhHoa4z15T09P+OHBIyX5d+8/BA8PD64v
        TT17jTQugBZAjupqYNaiaVJbhQDKqU4BTNi1kpnfzcuHEQCyuF2MNByM9uOxc9duRQA7Pt/F9aFxIDFn
        Nwlkko/E1G/I+L2550OprUIA5VSnABA3b09lPv7beWMAviJnB/NaR0kXimR6erP/VEOXgru5e8FwjyYK
        U738pd6+Ovk4NoC+LfyST2OlnUIA5VS3AKIHJDNl+I9XC4BHRW4GzfEJ0kk2j5neAUw93DZyO4UAyqlu
        AQz/aC5ThiOB7vXO5iadpiICeLuJcQGcCW2vMzJoxCfvKu00nwA2cBMvY/UCQHzC2J43fftWH2oB5Iwb
        D4Wbt0jgNF1migDySH+AruPbMphpo7kE0HanDQigf/5kphwHhVxMzOAmXgaf/qHrGKKAnNrxki5zMLit
        ejAIDFg4hWmjOQQQnZUCLXfwEy9TZQF0zxmk+Ntr7CG3eA3XT6YmBDC7ZBv4tQlhfPCMwNChAMcN4NhB
        ug4P7NTtb96Wm3gEd/0d67sxdQIiwqU20W00hwDakf4RL+k0VRbA1L+sgxax7Ulv3AMSJw/n+tDUiAAI
        uPIOTuy/cHhQCDf5MthhdDIgAkw+71SPpn+jxkwdbEPOlqU67TOHAEL6JXGTTlNlAVSUmhIAkjBxGOOH
        jGoWqndPcJ/MP9apBywMDJeO4TR4W3dPszbcpCP4z89q5KWzvKTcEdy2mUMAvumJ3KTT1CkBIG2T2ev/
        SIKXL1zongZ3evWDsm5p0gMeF9t3gW/DornJNcbh4HYQ1+AlneW0S+3KbRNiDgF4pCZwk05T5wQw68QW
        CImLYvwRHL2zwEhnzhhnCfPJnqExiaWOH9qlg7RsXpsQcwjA3RYFgGQveYvxp8Exe9ir5w3q1MepkEhJ
        POH19I8txGXy2iJT5wWQd4rt9erD3AKQcdM4QLKbh3S8x1E8h8huHcf2I3hah/OwLKmhBzQ04YaSzQpg
        0r6PpAsxGkcHiBuewfWhMYcAHJ2ND/CsKOqYliCAsZvNIID40QPoyjDpi9VcPxlzCADHDfR9+w1w9zN+
        f98Y7v4+Uiz1WARzC2BWyXaIW7WA8a8VAVjClUA1agEkTHxVmo+HqSErZkHrhFhwcdP/WLga9MU6WFc+
        1GFM2secAniLtCl+byE0W/Yu4y8EUI4sAJq8U1th1Lp86D1jLHQekg5OLtobOTiN87Bs1PoFkq+6viUI
        IO80EfSRIogsv+EjBFCOKQJQ08jXW/HHaZ4PjTkFMO3kNniFJD5mF3ujp9oF4BPZCkZ8WWSQVplJdGXo
        t7aA6yeTWbiU8Q9L78n1o/GLiWDqvHpwI9dPptf8qYx/zLhXuH40DX20V/VwmudDgzHpZeAyeX4yww5t
        ZPz9Ytpx/WjC09kHW3quXQJxezfqvcFT7QLAQl4lGlwIXQcbwfOTaf7+Qsa/UUJ3rh+Na2Rbpk7YljVc
        Pxn/GRMZf+9hg7h+NE7e2mv6OM3zocGY9DJwmTw/mbCtaxj/BpFtuH40jRLZQa3N31/A9ZMRAihHCOBP
        qiwAl+BmELRojkHc4jrRlaHp5HFcPxm/aRMY/4adOnD9aFzCWjB1gvJnc/1kvEcMZvw90pK4fjSO7o0U
        f5zm+dBgTHoZuEyen8KC2Yy/S2gLvh9Fw07RTB2/aW9w/WRw29P+mBueHw3mmK5DYH4IbA/2PXsCmwJz
        b/c1NUNgW5QQpLdu4Ltt8HXoBwiKQ7vI9vDK8JECCyZz4BBIz8jSS1hLnYdXMceYa3zXMeaesR4ExTl3
        +ky4++S5wII5d+U2HP36ol6Gj2FHPBMwx3pNCMDKEAKwcYQAbBwhABtHCMDGMZsA1hVtg8SU3hDfrYdZ
        SOuXAV8cPsZtmynsPngYsocM5ca2JHolJUt5uHL7Hnc9zCKAs5eugRP/Eyq1Cr7S5W8/PeO20RDzFy01
        6Z2AloR/QKC03dXrYhYBfLa3mA5oVs6X3uK2UR/Hz50HZ2fzi7cyJKWm6ayPWQTw6Z79dECz8t21Mm4b
        9TEnv4AbxxrAvdbNB4+Z9bEIAXQdk6UzvKmyvLzb8Bsu3GLZ5/wrKgBcJ7r+4uLDcOD5f5qN5Q/JIene
        L3ppm57BtFe9vkIAdV0AfTKZ9lq8AKYfK5RG1/Z8fUilCBw2ELyGZik0nZQD4dvXWpQA9v38G+QVboHe
        o8ZCfMYAg3TPyoYh0/Pgo6+/48aqcwJo8TI7orc68OijffGBuQXw8ZnzEBiuM6zKKPYaDfQbP0ESDx2v
        zglAUwOnV/WCAixCAJuu3AR376o9bZQ2+jUmZp0TAD2/unD2b2oRAuiZzY49rCzLjxxXYtZpAQS3jYCF
        e4oNMmXHPhi5bY8OLi9pB21WpwBmvP0OU3/F0ZNMkvWx6+FTcKa+RoLvG8IPVlxKzICrSZkwJCCYiXtu
        TTf47VA63NuZDIN6+jFlaWNylLh1WgAR8d2Yjcjjk59+4664a2PtgxvVKYCjp89BQ7c/X/KEAv3i8a/c
        dqlZffobZrnZ/s2Z18+MCGJfWnW9KAGgJFPixeE+4KDRvlG0bVy8ElcIoJYFgHx79SZ8sPcA7PnxGbdN
        PLDzRy+3j2+AyQJ4ur832NtryyK6dlfiCgGYQQDI6Wd/cNujj72Pn0P9htoXQ+Mn6/JaRkBxl0TpuwXp
        RBB0u3bld4Lv1/eAEx/EQ/f27JvF+r85WYkrBGAlAkD6vKazMSsMniXh3kSOKQRgRQL47M4j8A8JZZZf
        UYbNnsPEFAKwIgEgW27cgaiexj9Pp8bF1RXGLVqmE08IoJYFcOfxL5C/eBmkDnoFFpKOIK9NpvD+sVMw
        8p350CdnPKSOHKOXrElTIPfDj2H77fvcOEIAtSyANYXaFzfgef3Wm3e57aothABMEAA+veuTM1xC/XRr
        RQWA60TXX3LgCLddlQEvFhWV3ta53m8IIQATBGCIqgqgqreDdz96BqPm5oN/qPYLok7O9aBjUgosOfgl
        tw7N0ge/ctdfRgjACOYUwMZLNyColf4PR9rb20P21OncukgxoeC+7rrTCAEYwVwC2PXgZ5NvC4+ZX8CN
        sfPpC+660wgBENzcPaD/6DckcJpehrkEMHTmvzFxkLAO0RDXpx808tK+gQxxdqkPm66W6cRY/eN/cNed
        RgiA4OXrB7M/2CiB0/QyzCGA4l9egJefPxNn6uq1SvnOe4+l6/10OfYT6BifPf2Du95qjAng7OUybuJl
        hABUVIcANl+7xcTgrefq098yPrHpfZWync/+IMd+w71/GWMCOHPpJjfxMkIAKqpDAB+eOsvE6Jvzuo4P
        7iUcHLWftGndOZZ0+l7Ahse/wwLO+urDmABOfXeNm3gZIQAVagHk7T0Em578XiHmHythYmS+MZG7bo7U
        AyjBHTsb7fHzMCSAO4SvzlziJl5GCECFWgCjd+znLt8Qrx88zsQwRQCB0Z24sYxhSAA37j/mJp1GCEBF
        XRLA9zd+4CadRghARe70WUz9nlNmwqCPNlaI5Lx5TIyOyanScwJq6D6AV4tQbixjBEaz9z4uXL+trMvJ
        86XcpNMIAahYunIVU9+awLGMt398Kq2HKbt/RAhAxeVbP0BT1Tm8tfDmlGnKepy5ZPj8X0YIgMPevxyF
        gED248+WTv/swVD28M8ng6/f+4mbbB5CAHoovfsQVq8rhNlz58PMOXMtlnkFS5g3oeCAlpNGzv1p6oQA
        8PZq8/A2EjhNL6OyArBWvrlq+Nq/mjohAEPYkgAu3rrHTbIhhADqCBfL7nMTbAwhAGuHHPO/Lf0bN7mm
        YPEC0HdPnBZATQwLtwbKHjyBkgvGL/YYwuIFsPQB/7aoLQvg1qOnZL3Iv97IjR5TsGgB7DAwKMLWBICn
        d9fuPoJzl2/BsWpIvEyVBPD6pClw6dZ9HdZv3UEHrJQA9j9/Ae8ZGBJtqgD+evZ7bhstnYtl96SbOXha
        V3LhOkk6P4FVpUoCwMq8oMtXracDVlgA+wkrHxkeD2eqAD4/8BW3jYI/sSgBYOKLnvwBS/Qc92mEAKoH
        UwUQQUgivEVQnBNT+8DSlWt0GD9xGh1QrwBCYuOl3TyCnb38CoyIMVUA7yxcxm0jsmr9Vjh86jx3wyDb
        dh/i1qtLYA7p7UXAHGOuMeeS/TtB7VQh9AmgOREAL7mmYKoAjBHZIQaOlFzQSf6suQtBo9Fw69gQKwh2
        /0XNqBSWLACkaOf+5yfPl/5MExkV/Xeer42BuecWVAh9AnD1bCy967Yy0MOpqiIAfJBkxvI1yt1EmS7J
        OrtGW0X7w72xN/TsN9AoUV3Yhx70CaC6MCSALil9uW1EEgcMgYnzl+skH8lbuQEyRo7n1qvLYI7p7UfQ
        /ggKbcndWGpencQOrKQF4NKwAVNWHdQPD9UrgNyCldw2CvhgjuntR9D+qKwAwodmQt+DmyUiJowEDTUY
        sqpoGjQA/9lThACqiRoRQOOB/ZQEIfi9/5ANH1QLYdu0bwpHhACqRq0IoCYRAqgaBgXg6e0DvQePNErn
        Xil0AHDtEKm8wqWmUb8iJiFzMLeNAj6YY3r7EZgfAtvD7n9VMwS2w/8Q7DZRMwS2RSHBTkPoRRgksCkw
        5/YEYcKECRMmTJgwYcKE2ZDZ2f0/l0WCiVJ8GJgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAH2SURBVFhHxZfB
        SsNAEIZTskERayxVwVaUtr6BIr1VPEoPQos3j14qPo7vIAg+QS8FfQtBvYk9CC32Inbdf9Mpm3ST7iZC
        Fn5oZmfm+5M0ya7DOQ9JjNWyx/olz7sXv93ovK3Qw2fsoeSxAXovzIcORIJIfO41qpP2bnnsM/cRDdQc
        G6EWPdALPdEbjFCOkizhNyKRd0/5T6fFs5hADcHRCz3RO2qCkkNwUloTyI3CSVETGFo4ydYEcuLgpF69
        8r3BCk9gOwI+wP3RJZJMTZjAebf1OzypfVz53mTTLfQd/EOTCwItM2ECn3Za0+HxwfSlXuRna2zsuw6e
        NBPXgeJMGMK5gHOCFwuO7GFx6QJFTRjVxsAl2+YsSKqJLPCQgTQmLve2R1AyfD8WLpnqgQxYmEiUAVzy
        ogEZzGpC1HwawCVLF4RSmwD8yAwOaYMkaxOWcEgbVEUmLipbYy2UNIO/NYq8vc5GJnBIG1SVqwGC53IL
        rOEkSxP6YFo4CSayPIa3h9Xmda3ylQpOErXWLyIk7Kx4d+/nzVdtU0Uw96+vYkyYXnbMIw/5S2ukiSUf
        o7Rw1BnVJpjASA2fn4VBj9gFCTYgWeCWJhaXZNgF5booFSPfZfmsKL+NiVKU39ZMKZImctmczgOBiQE2
        LGgQnbcVesRvz7nzB/G0qm8qSM+UAAAAAElFTkSuQmCC
</value>
  </data>
</root>